{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import streamlit as st\nfrom PIL import Image\nimport numpy as np\nimport tensorflow as tf\n\n# Load the pre-trained CNN model (replace with your actual model loading)\n#model = tf.keras.models.load_model('/kaggle/working/LUNG_CANCER.keras')  # Adjust path as needed\n\n# Define image preprocessing function\ndef preprocess_image(image):\n    image = image.resize((224, 224))  # Adjust to your model's input size\n    image = np.array(image) / 255.0  # Normalize pixel values\n    image = np.expand_dims(image, axis=0)  # Add batch dimension\n    return image\n\n# Streamlit app\nst.title(\"Image Classification App\")\n\nuploaded_file = st.file_uploader(\"Choose an image...\", type=[\"jpg\", \"jpeg\", \"png\"])\n\nif uploaded_file is not None:\n    image = Image.open(uploaded_file)\n    st.image(image, caption='Uploaded Image.', use_column_width=True) \n    \n    if st.button('Classify'):\n        processed_image = preprocess_image(image)\n        prediction = model.predict(processed_image)\n\n        # Assuming binary classification (benign/malignant)\n        if prediction[0][0] > 0.5:\n            st.write(\"Prediction: Malignant\")\n        else:\n            st.write(\"Prediction: Benign\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-04T06:12:06.255360Z","iopub.execute_input":"2024-09-04T06:12:06.255903Z","iopub.status.idle":"2024-09-04T06:14:36.301994Z","shell.execute_reply.started":"2024-09-04T06:12:06.255835Z","shell.execute_reply":"2024-09-04T06:14:36.300600Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"\u001b[33mWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x7dff91e8f4f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')': /simple/streamlit/\u001b[0m\u001b[33m\n\u001b[0m\u001b[33mWARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x7dff91e8f7f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')': /simple/streamlit/\u001b[0m\u001b[33m\n\u001b[0m\u001b[33mWARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x7dff91e8fa90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')': /simple/streamlit/\u001b[0m\u001b[33m\n\u001b[0m\u001b[33mWARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x7dff91e8fc40>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')': /simple/streamlit/\u001b[0m\u001b[33m\n\u001b[0m\u001b[33mWARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.HTTPSConnection object at 0x7dff91e8fdf0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')': /simple/streamlit/\u001b[0m\u001b[33m\n\u001b[0m\u001b[31mERROR: Could not find a version that satisfies the requirement streamlit (from versions: none)\u001b[0m\u001b[31m\n\u001b[0m\u001b[31mERROR: No matching distribution found for streamlit\u001b[0m\u001b[31m\n\u001b[0m","output_type":"stream"}]}]}