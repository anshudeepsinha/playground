# -*- coding: utf-8 -*-
"""CNNWebApp

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/cnnwebapp-ccebfb7c-604d-4f48-b071-7fd7237eb769.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20240904/auto/storage/goog4_request%26X-Goog-Date%3D20240904T075751Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D0a44b4e9ff394ac6df9c8d6f28be9dcfeec8f7f2ecf7b80fc126e05dcf122b813c0c32f816e0c33ed5a351f9ed587bdac7a5e93f24517fcf6926b525a1edc14994a22f6a122539e0a44e58a2c8d94681f8fb1a86f88cf7e801dbad7459088681ec106351365de9ac2ee0901b3c47f5537367d775c583f080c03fde9d633c6c3ae07a44dd62614d155eb2b9ccb66bd24346ff93db091464e37d37151513bfb377083ae5b589046dda71a99c349225d8d54cf36cca3c53b9d9d9f3f76c3c365973850ade73d19097dce57529d3ea9b11e7ae0fcfca22de74ff81cf5fbd23c8d9d61931580370f747f5e06edaa3965a3483439ceedccf8a3c7e37427fb833f2a6f1
"""

import streamlit as st
from PIL import Image
import numpy as np
import tensorflow as tf

# Load the pre-trained CNN model (replace with your actual model loading)
model = tf.keras.models.load_model('/kaggle/working/LUNG_CANCER.keras')  # Adjust path as needed

# Define image preprocessing function
def preprocess_image(image):
    image = image.resize((224, 224))  # Adjust to your model's input size
    image = np.array(image) / 255.0  # Normalize pixel values
    image = np.expand_dims(image, axis=0)  # Add batch dimension
    return image

# Streamlit app
st.title("Image Classification App")

uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image.', use_column_width=True)

    if st.button('Classify'):
        processed_image = preprocess_image(image)
        prediction = model.predict(processed_image)

        # Assuming binary classification (benign/malignant)
        if prediction[0][0] > 0.5:
            st.write("Prediction: Malignant")
        else:
            st.write("Prediction: Benign")
